When would you want to use a remote repository rather than keeping all your work
local?

    When the project will be worked on from multiple computers and/or contributors

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    A local modification in progress could be interferred with by changes that
    have occurred in the remote repository. It would be best to wait until the
    local mod is finished before merging the upstream state into our local repo

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    A fork is a repo created on git hub which copies another repo into your 
    github user account where it becomes the starting point of your own version
    of the forked repo. A clone remains attached to the repo that it is cloned
    from and push and pull will effect that origin repo. A branch is a label
    for a commit history which has been branched off of an existing repo allowing
    it to be modified without interferring with the origin repo. A fork is used
    where you have no permission or desire to change in sync with the original 
    repo. A clone is used when you wish to both stay in sync with the original
    and perhaps push your changes to the original repo. A branch is used when you
    want to try out changes to the repo without effecting or being effected by
    changes to the master branch until you are ready to merge your changes.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It allows you to see what changes you have made relative to that last known
    state and allows git to merge changes made to remote easily. When two 
    collaborators make changes relative to their copy of the last know state of
    the remote, later merging the two branches it is much cleaner.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    Sending diffs between your changed tree versus some agreed upon starting
    version. It would be easier to see what changes are in mind, but more manual
    and error prone to merge those changes into your version of the tree.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Fill in your answer here

